# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  id: String!
  name: String
  task: Task!
  taskId: String!
  uploadedBy: User!
  uploadedById: String!
  url: String!
}

type AuthPayload {
  accessToken: String!
  email: String!
  id: String!
  name: String!
  profilePicture: String
  refreshToken: String!
}

type Comment {
  id: String!
  task: Task!
  taskId: String!
  text: String!
  user: User!
  userId: String!
}

input CreateProjectInput {
  description: String
  endDate: DateTime!
  name: String!
  projectOwnerId: String!
  startDate: DateTime!
  teamId: String!
}

input CreateTaskInput {
  assigneeId: String
  authorId: String!
  description: String
  dueDate: DateTime!
  priority: String
  projectId: String
  startDate: DateTime
  status: String
  tags: [String!]
  title: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  profilePicture: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addUserToProject(projectId: String!, userId: String!): ProjectMember!
  addUserToTeam(teamId: String!, userId: String!): TeamUser!
  changeUserPassword(updatePasswordInput: UpdatePasswordInput!): User!
  createProject(createProjectInput: CreateProjectInput!): Project!
  createTask(createTaskInput: CreateTaskInput!): Task!
  createTeam(name: String!, teamOwnerId: String!): Team!
  createUser(createUserInput: CreateUserInput!): User!
  deleteProject(projectId: String!): Project!
  deleteTeam(teamId: String!): Team!
  removeUserFromTeam(teamId: String!, userId: String!): Boolean!
  signOut(userId: String!): Boolean!
  updateProject(projectId: String!, updateProjectInput: UpdateProjectInput!): Project!
  updateTaskStatus(updateTaskStatusInput: UpdateTaskStatusInput!): Task!
  userLogin(loginInput: LoginInput!): AuthPayload!
}

type Project {
  createdOn: DateTime!
  description: String
  endDate: DateTime!
  id: String!
  modifiedOn: DateTime!
  name: String!
  projectMembers: [ProjectMember!]!
  projectOwner: User!
  startDate: DateTime!
  tasks: [Task!]!
  team: Team!
}

type ProjectMember {
  project: Project!
  projectId: String!
  user: User!
  userId: String!
}

type Query {
  getMembersOfProject(projectId: String!): [ProjectMember!]!
  getMembersOfTeam(teamId: String!): [TeamUser!]!
  getProjectById(projectId: String!): Project!
  getProjectsForTeam(teamId: String!): [Project!]!
  getProjectsForUser(userId: String!): [Project!]!
  getTeamById(teamId: String!): Team!
  getTeamsForUser(userId: String!): [Team!]!
  getUsers: [User!]!
  tasksByUser(userId: String!): [Task!]!
}

type Task {
  assignee: User
  assigneeId: String
  attachments: [Attachment!]!
  author: User!
  authorId: String!
  comments: [Comment!]!
  description: String
  dueDate: DateTime
  id: String!
  priority: String
  project: Project!
  projectId: String
  startDate: DateTime
  status: String
  tags: [String!]
  title: String!
}

type Team {
  id: String!
  members: [TeamUser!]
  name: String!
  project: [Project!]
  teamOwnerId: String!
}

type TeamUser {
  team: Team!
  teamId: String!
  user: User!
  userId: String!
}

input UpdatePasswordInput {
  confirmPassword: String!
  newPassword: String!
  oldPassword: String!
  userId: String!
}

input UpdateProjectInput {
  description: String
  endDate: DateTime!
  name: String!
  startDate: DateTime!
  teamId: String
}

input UpdateTaskStatusInput {
  status: String!
  taskId: String!
}

type User {
  assignedTasks: [Task!]!
  attachments: [Attachment!]!
  authoredTasks: [Task!]!
  comments: [Comment!]!
  email: String!
  id: String!
  name: String!
  profilePicture: String
  projectMembers: ProjectMember
  teams: [Team!]!
}